
bomb:     file format elf64-x86-64

SYMBOL TABLE:
0000000000400200 l    d  .interp	0000000000000000              .interp
000000000040021c l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
000000000040023c l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400260 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000400288 l    d  .dynsym	0000000000000000              .dynsym
00000000004005a0 l    d  .dynstr	0000000000000000              .dynstr
00000000004006c0 l    d  .gnu.version	0000000000000000              .gnu.version
0000000000400708 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000400748 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000400790 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000400a48 l    d  .init	0000000000000000              .init
0000000000400a60 l    d  .plt	0000000000000000              .plt
0000000000400c40 l    d  .text	0000000000000000              .text
00000000004018d8 l    d  .fini	0000000000000000              .fini
0000000000401900 l    d  .rodata	0000000000000000              .rodata
0000000000401ed8 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000401fb8 l    d  .eh_frame	0000000000000000              .eh_frame
00000000006022c0 l    d  .ctors	0000000000000000              .ctors
00000000006022d0 l    d  .dtors	0000000000000000              .dtors
00000000006022e0 l    d  .jcr	0000000000000000              .jcr
00000000006022e8 l    d  .dynamic	0000000000000000              .dynamic
0000000000602478 l    d  .got	0000000000000000              .got
0000000000602480 l    d  .got.plt	0000000000000000              .got.plt
0000000000602580 l    d  .data	0000000000000000              .data
0000000000602c40 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    d  .debug_loc	0000000000000000              .debug_loc
0000000000400c6c l     F .text	0000000000000000              call_gmon_start
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000006022c0 l     O .ctors	0000000000000000              __CTOR_LIST__
00000000006022d0 l     O .dtors	0000000000000000              __DTOR_LIST__
00000000006022e0 l     O .jcr	0000000000000000              __JCR_LIST__
0000000000400c90 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000602c58 l     O .bss	0000000000000001              completed.5895
0000000000602c60 l     O .bss	0000000000000008              dtor_idx.5897
0000000000400d00 l     F .text	0000000000000000              frame_dummy
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000006022c8 l     O .ctors	0000000000000000              __CTOR_END__
00000000004022b8 l     O .eh_frame	0000000000000000              __FRAME_END__
00000000006022e0 l     O .jcr	0000000000000000              __JCR_END__
00000000004018a0 l     F .text	0000000000000000              __do_global_ctors_aux
0000000000000000 l    df *ABS*	0000000000000000              bomb.c
0000000000000000 l    df *ABS*	0000000000000000              phases.c
0000000000401ba0 l     O .rodata	0000000000000040              array.3014
0000000000000000 l    df *ABS*	0000000000000000              support.c
00000000004011b0 l     F .text	0000000000000051              sig_handler
0000000000602480 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
00000000006022bc l       .ctors	0000000000000000              __init_array_end
00000000006022bc l       .ctors	0000000000000000              __init_array_start
00000000006022e8 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000602580  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
00000000006025a0 g     O .data	0000000000000018              n1
0000000000401890 g     F .text	0000000000000002              __libc_csu_fini
0000000000400c40 g     F .text	0000000000000000              _start
00000000006025e0 g     O .data	0000000000000018              n22
0000000000000000       F *UND*	0000000000000000              close@@GLIBC_2.2.5
0000000000602600 g     O .data	0000000000000018              n32
0000000000000000       F *UND*	0000000000000000              gethostbyname@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
000000000040106f g     F .text	000000000000006a              fun6
0000000000000000       F *UND*	0000000000000000              __isoc99_sscanf@@GLIBC_2.7
0000000000401743 g     F .text	0000000000000042              read_six_numbers
0000000000000000       F *UND*	0000000000000000              exit@@GLIBC_2.2.5
00000000006026a0 g     O .data	0000000000000018              n41
0000000000602680 g     O .data	0000000000000018              n45
0000000000602c20 g     O .data	0000000000000004              bomb_id
00000000004018d8 g     F .fini	0000000000000000              _fini
0000000000602820 g     O .data	0000000000000400              lab_id
000000000040123d g     F .text	000000000000007e              strings_not_equal
00000000004010d9 g     F .text	0000000000000043              phase_6
0000000000000000       F *UND*	0000000000000000              fopen@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              dup@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              system@@GLIBC_2.2.5
0000000000400e8c g     F .text	000000000000006d              phase_2
00000000006027b0 g     O .data	0000000000000010              node3
0000000000000000       F *UND*	0000000000000000              fgets@@GLIBC_2.2.5
00000000006027f0 g     O .data	0000000000000010              node7
0000000000401900 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000000000       F *UND*	0000000000000000              fputc@@GLIBC_2.2.5
0000000000602620 g     O .data	0000000000000018              n33
0000000000602580 g       .data	0000000000000000              __data_start
0000000000000000       F *UND*	0000000000000000              bcopy@@GLIBC_2.2.5
000000000040111c g     F .text	000000000000003e              fun7
000000000040115a g     F .text	0000000000000050              secret_phase
0000000000000000       F *UND*	0000000000000000              __ctype_b_loc@@GLIBC_2.3
0000000000602740 g     O .data	0000000000000018              n46
0000000000602700 g     O .data	0000000000000018              n42
0000000000000000       F *UND*	0000000000000000              sprintf@@GLIBC_2.2.5
0000000000602c40 g     O .bss	0000000000000008              stdin@@GLIBC_2.2.5
000000000040163d g     F .text	0000000000000022              explode_bomb
0000000000000000       F *UND*	0000000000000000              sleep@@GLIBC_2.2.5
0000000000400ef9 g     F .text	000000000000008b              phase_3
00000000006027a0 g     O .data	0000000000000010              node2
000000000040165f g     F .text	00000000000000e4              read_line
0000000000000000       F *UND*	0000000000000000              rewind@@GLIBC_2.2.5
0000000000401908 g     O .rodata	0000000000000000              .hidden __dso_handle
0000000000000000       F *UND*	0000000000000000              strtol@@GLIBC_2.2.5
00000000006022d8 g     O .dtors	0000000000000000              .hidden __DTOR_END__
0000000000401800 g     F .text	0000000000000089              __libc_csu_init
0000000000602f40 g     O .bss	0000000000000640              input_strings
0000000000000000       F *UND*	0000000000000000              connect@@GLIBC_2.2.5
00000000006027e0 g     O .data	0000000000000010              node6
0000000000000000       F *UND*	0000000000000000              tmpfile@@GLIBC_2.2.5
00000000004012bb g     F .text	00000000000000dc              open_clientfd
0000000000401397 g     F .text	0000000000000018              initialize_bomb
0000000000602660 g     O .data	0000000000000018              n34
0000000000401785 g     F .text	0000000000000070              phase_defused
0000000000602810 g     O .data	0000000000000010              node9
00000000004013af g     F .text	000000000000003d              blank_line
0000000000000000       F *UND*	0000000000000000              signal@@GLIBC_2.2.5
00000000004013ec g     F .text	0000000000000041              skip
0000000000000000       F *UND*	0000000000000000              socket@@GLIBC_2.2.5
0000000000602ca0 g     O .bss	0000000000000280              host_table
0000000000000000       F *UND*	0000000000000000              getenv@@GLIBC_2.2.5
00000000006026c0 g     O .data	0000000000000018              n47
0000000000602f20 g     O .bss	0000000000000008              infile
0000000000602720 g     O .data	0000000000000018              n43
0000000000602c24 g       *ABS*	0000000000000000              __bss_start
000000000040142d g     F .text	0000000000000210              send_msg
0000000000400fc1 g     F .text	0000000000000041              phase_4
0000000000603580 g     O .bss	0000000000000050              scratch
0000000000602c80 g     O .bss	0000000000000004              num_input_strings
0000000000000000       F *UND*	0000000000000000              cuserid@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              strcpy@@GLIBC_2.2.5
0000000000602640 g     O .data	0000000000000018              n31
0000000000401201 g     F .text	0000000000000020              invalid_phase
0000000000602790 g     O .data	0000000000000010              node1
00000000006025c0 g     O .data	0000000000000018              n21
00000000006035d0 g       *ABS*	0000000000000000              _end
0000000000000000       F *UND*	0000000000000000              fclose@@GLIBC_2.2.5
00000000006027d0 g     O .data	0000000000000010              node5
0000000000602800 g     O .data	0000000000000010              node8
0000000000000000       F *UND*	0000000000000000              fwrite@@GLIBC_2.2.5
0000000000602c24 g       *ABS*	0000000000000000              _edata
00000000006026e0 g     O .data	0000000000000018              n44
0000000000000000       F *UND*	0000000000000000              fprintf@@GLIBC_2.2.5
0000000000401002 g     F .text	000000000000006d              phase_5
0000000000602760 g     O .data	0000000000000018              n48
0000000000401221 g     F .text	000000000000001c              string_length
0000000000400f84 g     F .text	000000000000003d              func4
0000000000602c50 g     O .bss	0000000000000008              stdout@@GLIBC_2.2.5
00000000006027c0 g     O .data	0000000000000010              node4
0000000000400d24 g     F .text	0000000000000141              main
0000000000400a48 g     F .init	0000000000000000              _init
0000000000000000       F *UND*	0000000000000000              fflush@@GLIBC_2.2.5
0000000000400e70 g     F .text	000000000000001c              phase_1
0000000000602780 g     O .data	0000000000000010              node0


0x602780 <node0>:	11111	0	6301584	0
0x602790 <node1>:	374	1	6301600	0
0x6027a0 <node2>:	826	2	6301616	0
0x6027b0 <node3>:	370	3	6301632	0
0x6027c0 <node4>:	782	4	6301648	0
0x6027d0 <node5>:	488	5	6301664	0
0x6027e0 <node6>:	673	6	6301680	0
0x6027f0 <node7>:	286	7	6301696	0
0x602800 <node8>:	600	8	6301712	0
0x602810 <node9>:	529	9	0	0

edi = address of node0 = my number
edx = 0xa
esi = 0
r8 = address of node1
rax = &node0
rcx = &node0
esi = node1

func6+98 --> compare node1, node0
		jump if node0 is greater: fun6+30
  		else jump: fun6+51
0x602780 <node0>:	11111	0	0	0
0x602790 <node1>:	374	1	6301600	0
0x6027a0 <node2>:	826	2	6301616	0
0x6027b0 <node3>:	370	3	6301632	0
0x6027c0 <node4>:	782	4	6301648	0
0x6027d0 <node5>:	488	5	6301664	0
0x6027e0 <node6>:	673	6	6301680	0
0x6027f0 <node7>:	286	7	6301696	0
0x602800 <node8>:	600	8	6301712	0
0x602810 <node9>:	529	9	0	0


int fun7( ) {
  if (rdi(&n1) == 0) 
    jmp L2
  else
    edx = *rdi(*n1)
    if(edx(n[x]) <= mynumber)
      jmp L1
    else
      rdi = rdi[8](n1+8)
      fun7(rdi)
      eax += eax
      jmp L3
.L1
    eax = 0
    if (mynumber == edx(n1)) //want eax = 3 when jmp l3
       jmp L3
    else
      rdi = rdi[10]
      fun7(rdi)
    eax = [rax + rax*1 + 1]
    jmp L3
L2  eax = 0xffffffff
L3  return eax		//want eax == 3



0x6025a0 <n1>:	0x00000024	0x00000000	0x006025c0	0x00000000
0x6025b0 <n1+16>:	0x006025e0	0x00000000	0x00000000	0x00000000

0x6025c0 <n21>:	0x00000008	0x00000000	0x00602640	0x00000000
0x6025d0 <n21+16>:	0x00602600	0x00000000	0x00000000	0x00000000

0x6025e0 <n22>:	0x00000032	0x00000000	0x00602620	0x00000000

0x6025f0 <n22+16>:	0x00602660	0x00000000	0x00000000	0x00000000

0x602600 <n32>:	0x00000016	0x00000000	0x00602720	0x00000000
0x602610 <n32+16>:	0x006026e0	0x00000000	0x00000000	0x00000000

0x602620 <n33>:	0x0000002d	0x00000000	0x00602680	0x00000000
0x602630 <n33+16>:	0x00602740	0x00000000	0x00000000	0x00000000

0x602640 <n31>:	0x00000006	0x00000000	0x006026a0	0x00000000
0x602650 <n31+16>:	0x00602700	0x00000000	0x00000000	0x00000000

0x602660 <n34>:	0x0000006b	0x00000000	0x006026c0	0x00000000
0x602670 <n34+16>:	0x00602760	0x00000000	0x00000000	0x00000000

0x602680 <n45>:	0x00000028	0x00000000	0x00000000	0x00000000
0x602690 <n45+16>:	0x00000000	0x00000000	0x00000000	0x00000000

0x6026a0 <n41>:	0x00000001	0x00000000	0x00000000	0x00000000
0x6026b0 <n41+16>:	0x00000000	0x00000000	0x00000000	0x00000000

0x6026c0 <n47>:	0x00000063	0x00000000	0x00000000	0x00000000
0x6026d0 <n47+16>:	0x00000000	0x00000000	0x00000000	0x00000000

0x6026e0 <n44>:	0x00000023	0x00000000	0x00000000	0x00000000
0x6026f0 <n44+16>:	0x00000000	0x00000000	0x00000000	0x00000000

0x602700 <n42>:	0x00000007	0x00000000	0x00000000	0x00000000
0x602710 <n42+16>:	0x00000000	0x00000000	0x00000000	0x00000000

0x602720 <n43>:	0x00000014	0x00000000	0x00000000	0x00000000
0x602730 <n43+16>:	0x00000000	0x00000000	0x00000000	0x00000000

0x602740 <n46>:	0x0000002f	0x00000000	0x00000000	0x00000000
0x602750 <n46+16>:	0x00000000	0x00000000	0x00000000	0x00000000

0x602760 <n48>:	0x000003e9	0x00000000	0x00000000	0x00000000
0x602770 <n48+16>:	0x00000000	0x00000000	0x00000000	0x00000000

